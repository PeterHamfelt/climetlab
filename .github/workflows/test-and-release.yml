name: Full tests and release

on:
  workflow_dispatch: {}

  release:
    types: [created]

  push:
    paths:
      - 'climetlab/version'

  repository_dispatch:
    types:
      - cdsapi-updated
      - magics-python-updated
      - ecmwf-api-client-updated

jobs:
  quality:
    if: startsWith(github.ref, 'refs/tags/')
    name: Code QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install black flake8 isort
      - run: black --version
      - run: isort --version
      - run: flake8 --version
      - run: isort --check .
      - run: black --check .
      - run: flake8 .

  checks:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      fail-fast: false
      matrix:
        platform: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9"]

    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    needs: quality

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Tokens
        shell: python
        env:
          ECMWFAPIRC: ${{ secrets.ECMWFAPIRC }}
          CDSAPIRC: ${{ secrets.CDSAPIRC }}

        run: |
          import os
          for n in ('ECMWFAPIRC', 'CDSAPIRC'):
              m = os.path.expanduser("~/." + n.lower())
              if os.environ[n]:
                  with open(m, "w") as f:
                      print(os.environ[n], file=f)

      - name: Install climetlab
        run: |
          pip install -e .
          pip freeze

      - name: Install test tools
        run: |
          pip install pytest pytest-cov
          pip install nbformat nbconvert # to test notebooks
          pip freeze

      - name: Tests
        run: |
          # -E flag is defined in conftest.py
          # notebooks are tested below, as they need more dependencies
          pytest --durations=0 -E release -k 'not test_notebooks'
        env:
          CLIMETLAB_DEBUG: 1

      - name: Install test tools for notebooks
        run: |
          pip install nbformat nbconvert ipykernel
          pip freeze

      - name: Tests notebooks
        run: |
          pytest --durations=0 tests/documentation/test_notebooks.py
        env:
          CLIMETLAB_DEBUG: 1

      - name: Install packages needed to build the documentation
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          pip install sphinx
          pip install -r docs/requirements.txt
          sudo apt-get install pandoc
          pip freeze

      - name: Documentation
        run: |
        if: ${{ matrix.platform == 'ubuntu-latest' }}
          make clean
          make html
          # make linkcheck (don't run yet)
        working-directory: docs

      - name: Re-install packaging without -e
        run: |
          pip uninstall climetlab -y
          pip install .
          pip freeze

      - name: Tests packaging
        run: |
          pytest --durations=0 tests/core/test_version.py


  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    # add if owner, etc.

    name: Upload to Pypi and release
    needs: checks

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check version
        run: |
          tag=${GITHUB_REF#refs/tags/}
          version=$(python setup.py --version)
          echo 'tag='$tag
          echo "version file="$version
          test "$tag" == "$version"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Check version
        run: |
          release=${GITHUB_REF##*/}
          version=$(python setup.py --version)
          test "$release" == "$version"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build pip package
        run: |
          python setup.py sdist

      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')

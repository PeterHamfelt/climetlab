# (C) Copyright 2021 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.
#

name: Full tests and release

on:
  workflow_dispatch: {}

  release:
    types: [created]

  push:
    paths:
    - 'climetlab/version'

  repository_dispatch:
    types:
    - cdsapi-updated
    - magics-python-updated
    - ecmwf-api-client-updated

jobs:
  quality:
    if: startsWith(github.ref, 'refs/tags/')
    name: Code QA
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: pip install black flake8 isort
    - run: black --version
    - run: isort --version
    - run: flake8 --version
    - run: isort --check .
    - run: black --check .
    - run: flake8 .

  test_build_doc:
    if: startsWith(github.ref, 'refs/tags/')
    name: Test building documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install packages needed to build the documentation
      run: |
        pip install sphinx
        pip install -r docs/requirements.txt
        sudo apt-get install pandoc
        pip freeze

    - name: Documentation
      run: |
        make clean
        make html
        # make linkcheck (don't run yet)
      working-directory: docs

  checks:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [quality, test_build_doc]
    strategy:
      fail-fast: true
      matrix:
        platform: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8", "3.9", "3.10"]
        # exclude:
        #   - platform: "windows-latest"
        #     python-version: "3.7"

    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Tokens
      shell: python
      env:
        ECMWFAPIRC: ${{ secrets.ECMWFAPIRC }}
        CDSAPIRC: ${{ secrets.CDSAPIRC }}

      run: |
        import os
        for n in ('ECMWFAPIRC', 'CDSAPIRC'):
            m = os.path.expanduser("~/." + n.lower())
            if os.environ[n]:
                with open(m, "w") as f:
                    print(os.environ[n], file=f)

    - name: Install climetlab
      run: |
        pip install -e .
        pip freeze

    - run: climetlab versions

    - name: Install test tools
      run: |
        pip install pytest
        pip freeze

    - name: Check imports
      run: |
        pytest tests/test_imports.py
      env:
        SKIP_TEST_IMPORTS: 0

    - name: Tests
      run: |
        # -E flag is defined in conftest.py
        # notebooks are tested below, as they need more dependencies
        pytest --durations=0 -E release -k 'not test_notebooks'

    - name: Install test tools for notebooks
      run: |
        pip install nbformat nbconvert ipykernel

    - name: Install climetlab full
      run: |
        pip install -e .[interactive,tensorflow,zarr]
        pip freeze

    - name: Tests notebooks
      run: |
        pytest -E release tests/documentation/test_notebooks.py

    - name: Re-install packaging without -e
      run: |
        pip uninstall climetlab -y
        pip install .
        pip freeze

    - name: Tests packaging
      run: |
        pytest --durations=0 -E release tests/core/test_version.py
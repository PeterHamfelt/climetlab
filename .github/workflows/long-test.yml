name: Long tests

on:
  push:
    branches: [ main ]

#  schedule:
#    # Every day at 3:07 am
#    - cron:  '07 3 * * *'

  workflow_dispatch: {}

jobs:
  quality:
    name: Code QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install black flake8 isort
      - run: black --version
      - run: isort --check .
      - run: black --check .
      - run: flake8 .

  checks:
    strategy:
      fail-fast: false
      matrix:
        platform: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9"]

    name: Python  ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Tokens
        shell: python
        env:
          ECMWFAPIRC: ${{ secrets.ECMWFAPIRC }}
          CDSAPIRC: ${{ secrets.CDSAPIRC }}

        run: |
          import os
          for n in ('ECMWFAPIRC', 'CDSAPIRC'):
              m = os.path.expanduser("~/." + n.lower())
              if os.environ[n]:
                  with open(m, "w") as f:
                      print(os.environ[n], file=f)

      - name: Install climetlab
        run: |
          pip install -e .
          pip freeze

      - name: Install test tools
        run: |
          pip install pytest pytest-cov
          pip freeze

      - name: Install packages needed to build the documentation
        run: |
          pip install sphinx
          pip install -r docs/requirements.txt
          # sudo apt-get install pandoc
          pip freeze

      - name: Tests
        run: |
          pytest --durations=0 -E long
        env:
          CLIMETLAB_DEBUG: 1

      - name: Documentation
        run: |
          make clean
          make html
          # make linkcheck (don't run yet)
        working-directory: docs